<?php

/**
 * @file
 * The UCInetID module, which allows UCI WebAuth login
 */

// helpful urls
define('UCINETID_WEBAUTH_LOGIN', 'https://login.uci.edu/ucinetid/webauth');
define('UCINETID_WEBAUTH_CHECK', 'https://login.uci.edu/ucinetid/webauth_check');

define('UCINETID_UCINETID_URL', 'http://oit.uci.edu/ucinetid/');
define('UCINETID_CAMPUSID_URL', 'http://oit.uci.edu/help/webauth/campusid.html');
define('UCINETID_WEBAUTH_URL',  'http://oit.uci.edu/help/webauth/');

/**
 * Implementation of hook_menu().
 */
function ucinetid_menu() {
  $items['admin/config/people/ucinetid'] = array(
    'title' => 'UCInetID settings',
    'description' => 'Configure secure login with UCInetIDs, including LDAP, WebAuth and new account settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ucinetid_admin_settings'),
    'access arguments' => array('administer users'),
    'file' => 'ucinetid.admin.inc',
  );

  // handy features only available if LDAP is enabled
  $items['admin/people/ucinetid/search'] = array(
    'title' => 'Add UCI user',
    'description' => 'Add an account by searching UCI Directory',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ucinetid_ldap_search_form', 4, 'admin/people', 'user'),
    'access callback' => 'ucinetid_ldap_access',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'ucinetid.pages.inc',
    'weight' => 9,
  );
  $items['admin/people/ucinetid/batch'] = array(
    'title' => 'Batch Add UCI users',
    'description' => 'Add a batch of user accounts by UCInetID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ucinetid_batch_register', 'ucinetid'),
    'access callback' => 'ucinetid_ldap_access',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'ucinetid.pages.inc',
    'weight' => 10,
  );

  // UCI Login page
  $items['user/login/ucinetid'] = array(
    'title' => 'UCInetID Login',
    'page callback' => 'ucinetid_authenticate',
    'page arguments' => array(3),
    'access callback' => 'user_is_anonymous',
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'ucinetid.pages.inc',
  );

#  $items['user/ucinetid'] = array(
#    'title' => 'UCI Login',
#    'page callback' => 'ucinetid_authenticate',
#    'page arguments' => array(3),
#    'access callback' => 'user_is_anonymous',
#    'type' => MENU_LOCAL_TASK,
#    'file' => 'ucinetid.pages.inc',
#  );
  $items['user/%user/ucinetid'] = array(
    'title' => 'UCInetID credentials',
    'page callback' => 'ucinetid_user_edit_callback',
    'page arguments' => array(1, 3),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'ucinetid.pages.inc',
  );
  return $items;
}

/*
 * Implements access callback.
 */
function ucinetid_ldap_access() {
  if (!function_exists('ldap_connect')) { // menu items not available
    return FALSE;
  }

  // implement normal access check
  $args = func_get_args();
  return call_user_func_array('user_access', $args);
}


/**
 * Implements hook_theme().
 *
 * Returns information about every themable function defined by the module.
 */
function ucinetid_theme($args, $type, $theme, $path) {
  $items = array();

  $items['ucinetid_user_search'] = array(
    'render element' => 'form',
    'file' => 'ucinetid.theme.inc',
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function ucinetid_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ucinetid':
      $output =
'<p>'.  t('A ') . l(t('UCInetID'), UCINETID_UCINETID_URL, array('external' => TRUE)) .
t(' is a computer login name, used to access many on-line services at the ') .
l(t('University of California, Irvine'), 'http://www.uci.edu/', array('external' => TRUE)) .
t('.  This module provides an interface to ') .
l(t('UCI WebAuth'), UCINETID_WEBAUTH_URL, array('external' => TRUE)) .
t(', a secure way to login to websites at uci.edu with your UCInetID without sharing your password.') .'</p>'.

'<p>'.
t('How it works: Users login with their UCInetID and password at ') .
l(t('login.uci.edu'), variable_get('ucinetid_login_url', 'https://login.uci.edu'), array('external' => TRUE)) .
t('.  After verifying the UCInetID and password, the server sends the browser a ') .
l(t('web cookie'), 'http://en.wikipedia.org/wiki/HTTP_cookie', array('external' => TRUE)) .
t(' for the domain <strong>uci.edu</strong>.
The web browser will send back this cookie when the user accesses any website at uci.edu.  ') .
t('Websites at uci.edu can validate the cookie to verify the identity of the user.
UCInetIDs are convenient login names, but they can change or be re-used by another person.  To uniquely
identify an individual, UCI also permanently assigns a 12-digit ') .
l(t('CampusID'), UCINETID_CAMPUSID_URL, array('external' => TRUE)) .
t(' to each person.  This module verifies both the UCInetID and CampusID upon login.') .'</p>'.

'<p>'.
t('Features: The administrator can assign a UCInetID and CampusID to each user account.
If not known, CampusID values can be looked up in the UCI directory '. variable_get('ucinetid_ldap_server', 'ldap.service.uci.edu') .'.
Users can add or remove their UCInetID and CampusID on their ') .
l(t('My account'), 'user') .
t(' page.  A link is provided on the login page to ') .
l(t('Log in using UCInetID'), 'user/login/ucinetid') .
t('.  For users who login with their UCInetID: new accounts
will be automatically created (if visitor registration is allowed); 
UCInetIDs will be automatically added to existing accounts upon login with Drupal username and password.
Each UCInetID can only be assigned to one user account at a time.  ') .'</p>'.

'<p>'.
t('Limitations: The WebAuth service does not prove the identity of the user, only that the browser
has a cookie that corresponds to an authenticated session.
Group UCInetIDs may not correspond to a single individual.
Cookie-based authentication is vulnerable to ') .
l(t('Cross-Site Request Forgery'), 'http://www.owasp.org/index.php/Cross-Site_Request_Forgery', array('external' => TRUE)) .
t('; however, Drupal forms use unique tokens to help protect against this vulnerability.  ') .'</p>'.

'<p>'.
t('This module was originally developed in February 2009 by John Romine in the ') .
l(t('Henry Samueli School of Engineering'), 'http://www.eng.uci.edu/', array('external' => TRUE)) .
t(' at UC Irvine, based in part on the OpenID module.'  ) .'</p>';
      return $output;
  }
}

/**
 * Implements hook_block_info().
 */
function ucinetid_block_info() {
    // Generate listing of blocks from this module, for the admin/block page
    $block = array();
    $block[0]["info"] = t('UCInetID Login');
    return $block;
}

/**
 * Implements hook_block_view().
 *
 * Show a login with UCInetID link, or form.
 */
function ucinetid_block_view($delta = '') {
  global $user;

  $block = array();
  // avoid showing login block if on user page, or already logged in
  if (!$user->uid && !(arg(0) == 'user' && !is_numeric(arg(1)))) {

    // Generate our block content
    $block['subject'] = 'UCInetID Login'; 
    if (false && variable_get('ucinetid_login_page', 0)) { // embed WebAuth login form
      $block['content'] = drupal_get_form('ucinetid_login');
      $block['content']['actions']['cancel']['#access'] = FALSE;
    }
    else {
      $items = array();
      $items[] = array(
        'data' => l(t('Log in using UCInetID'), 'user/login/ucinetid', array('query' => drupal_get_destination(), 'attributes' => array('title' => t('Log in securely using UCI WebAuth with UCInetID')),
        )),
        'class' => array('ucinetid-link'),
      );
      $block['content'] = array(
        '#theme' => 'item_list',
        '#items' => $items,
        '#attributes' => array('class' => array('ucinetid-links'), 'id' => 'ucinetid-links'),
        '#weight' => 1,
      );
    }
  }
  return $block;
}

/**
 * Implements hook_user_login().
 */
#function ucinetid_user_login(&$edit, $account) {
#  if (isset($_SESSION['ucinetid']['values']['authname_ucinetid'])) {
#    $authname = $_SESSION['ucinetid']['values']['authname_ucinetid'];
#    $a1 = ucinetid_get_authmap($authname);    // lookup proposed token
#    $a2 = ucinetid_get_authmap($account);     // existing value, if any
#    if (!isset($a2['aid']) && !isset($a1['aid'])) {   // no authname now, and authname not in use
#      user_set_authmaps($account, array('authname_ucinetid' => $authname));
#      drupal_set_message(t('Added your UCInetID to this account'));
#    }
#  }
#  unset($_SESSION['ucinetid']);
#}

/**
 * Implements hook_user_insert().
 */
#function ucinetid_user_insert(&$edit, $account, $category) {
#  if (isset($_SESSION['ucinetid']['values'])) {
#    // ...not exactly sure when/if this gets used (old code from openid module)
#
#    // The user has registered after trying to login via ucinetid.
#    if (variable_get('user_email_verification', TRUE)) {
#      drupal_set_message(t('Once you have verified your email address, you may log in via UCInetID.'));
#    }
#
#    // TODO maybe should reset account timestamp  'access' see user_external_login_register()?
#    unset($_SESSION['ucinetid']);
#  }
#}

/*
 * We want to show a UCInetID/password link or form on the standard login page 
 * and login block.
 *
 * We also publish our own UCInetID login block, so the site can disable the
 * standard block, and just use the UCInetID one, if desired.
 */


/**
 * Implements hook_form_FORM_ID_alter().
 */
function ucinetid_form_user_login_block_alter(&$form, &$form_state) {
  _ucinetid_user_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ucinetid_form_user_login_alter(&$form, &$form_state) {
  _ucinetid_user_login_form_alter($form, $form_state);
}

function _ucinetid_user_login_form_alter(&$form, &$form_state) {
  $form['#attached']['css'][] = drupal_get_path('module', 'ucinetid') . '/ucinetid.css';
  $form['#attached']['js'][] = drupal_get_path('module', 'ucinetid') . '/ucinetid.js';

    if (isset($_SESSION['ucinetid']['values']['name'])) {
      $form['name']['#default_value'] = $_SESSION['ucinetid']['values']['name'];
    }
    else {
      $items = array();
      $items[] = array(
        'data' => l(t('Log in using UCInetID'), 'user/login/ucinetid', array(
           // avoid redirecting to user/login after user/login page posted (access denied)
#           'query' => ($form_id == 'user_login' ? NULL : drupal_get_destination()),
           'attributes' => array('title' => t('Log in securely using UCI WebAuth with UCInetID')),
          )),
        'class' => array('ucinetid-link'),
      );

      $form['ucinetid_links'] = array( // id for ucinetid.js
        '#theme' => 'item_list',
        '#items' => $items,
        '#attributes' => array('class' => array('ucinetid-links'), 'id' => 'ucinetid-links'),
        '#weight' => 1,
      );

      $form['links']['#weight'] = 3;
    }

    if (variable_get('ucinetid_login_page', 0)) { // embed WebAuth login form
      if (empty($form['#suffix']))
        $form['#suffix'] = ucinetid_user_login_suffix(); // this is our WebAuth login form
      else
        $form['#suffix'] .= ucinetid_user_login_suffix();
    }
}

/**
 * Append ucinetid login form to standard login form.
 * This form posts at the UCI WebAuth server, and then redirects
 * back to the Drupal site.
 */
function ucinetid_user_login_suffix() {
  drupal_add_js(array('ucinetid' => array('login' => variable_get('ucinetid_login', 0) == 1)), 'setting'); // Drupal.settings.ucinetid.login

  $form = drupal_get_form('ucinetid_login');
  return '<div id="ucinetid-login-wrapper" class="block block-user" style="display: none;">'. drupal_render($form) .'</div>';
}

/*
 * Implements hook_form_FORM_ID_alter.
 */
function ucinetid_form_user_profile_form_alter(&$form, &$form_state) {
  if ($form['#user_category'] == 'account') {
    _ucinetid_user_form_alter($form, $form_state);
  }
}

/*
 * Implements hook_form_FORM_ID_alter.
 */
function ucinetid_form_user_register_form_alter(&$form, &$form_state) {
  if (user_access('administer users')) {
    _ucinetid_user_form_alter($form, $form_state);

    // this is link-back data from LDAP result on Add UCInetID User page
    if (empty($form['account']['name']['#default_value']) && isset($_GET['name'])) {
      $form['account']['name']['#default_value'] = $_GET['name'];
    }
    if (empty($form['account']['mail']['#default_value']) && isset($_GET['mail'])) {
      $form['account']['mail']['#default_value'] = $_GET['mail'];
    }

  }
}

/*
 * Alter user_profile_form and user_register_form.
 *
 * For admin, add the UCInetID input fields with existing values.
 * For non-admin, add Add/Delete UCInetID links.
 */
function _ucinetid_user_form_alter(&$form, &$form_state) {
  $account = $form['#user'];
  $form_id = $form['#form_id'];

  // create fieldset for a nice appearance
  $form['ucinetid'] = array(
    '#type' => 'fieldset',
    '#title' => t('UCI.EDU identity'),
    '#weight' => 5,           /* timezone section = 6 */
    '#description' => '<p>'.  t('Associate a ') .
      l(t('UCInetID'), UCINETID_UCINETID_URL, array('external' => TRUE)) .  t(' and ') .
      l(t('CampusID'), UCINETID_CAMPUSID_URL, array('external' => TRUE)) .  t(' with this account for ') .
      l(t('WebAuth'), UCINETID_WEBAUTH_URL, array('external' => TRUE)) .  t(' login') .'.</p>',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $identity = ucinetid_get_authmap($account);      // existing value, if any
  $form['ucinetid']['authname_ucinetid'] = array(
    '#type' => 'value',
    '#value' => isset($identity['authname']) ? $identity['authname'] : '',
  );

  if (user_access('administer users')) {

    // admin users get textfield inputs

    // maybe populate from LDAP response ($_GET)
    $form['ucinetid']['ucinetid'] = array(
      '#type' => 'textfield',
      '#default_value' => isset($identity['ucinetid']) ? $identity['ucinetid'] : (isset($_GET['ucinetid']) ? $_GET['ucinetid'] : ''),
      '#title' => t('UCInetID'),
      '#field_suffix' => t('@uci.edu'),
      '#size' => 15,
      '#maxlength' => 64,
      '#description' => t('Login name (e.g., juser), used for uci.edu email and other campus services.'),
    );
    $form['ucinetid']['campusid'] = array(
      '#type' => 'textfield',
      '#default_value' => isset($identity['campusid']) ? $identity['campusid'] : (isset($_GET['campusid']) ? $_GET['campusid'] : ''),
      '#title' => t('CampusID'),
      '#size' => 15,
      '#maxlength' => 12,
      '#description' => t('Persistent 12-digit number (e.g., 000008675309) which uniquely identifies an individual.'),
    );

    // admin user
    $form['#validate'][] = 'ucinetid_user_form_validate';
    $form['#submit'][] = 'ucinetid_user_form_submit';

    if (function_exists('ldap_connect')) {    // assume
      $form['ucinetid']['campusid']['#description'] .=  '<br />'. t("If you don't know the value, leave the field blank and it will be retrieved from the campus directory if possible.");
    }


  }
  elseif ($form_id == 'user_profile_form' && !empty($account->uid)) {  // not admin

    if (isset($identity['ucinetid'])) {// ucinetid already associated with account

      $form['ucinetid']['ucinetid'] = array(
        '#type' => 'item',
        '#markup' => check_plain($identity['ucinetid']),
        '#title' => t('UCInetID'),
      );
      $form['ucinetid']['campusid'] = array(
        '#type' => 'item',
        '#markup' => check_plain($identity['campusid']),
        '#title' => t('CampusID'),
      );

      $form['ucinetid']['remove'] = array(    // add link for 'remove'
        '#markup' => l(t('Remove UCInetID'), 'user/'. $account->uid .'/ucinetid/delete',
          array('attributes' => array('title' => 'Remove ability to login to this account using this UCInetID'))),
        '#weight' => 19,
      );

    }
    else {                    // no ucinetid associated with account

      $form['ucinetid']['add'] = array(       // add link for 'add'
        '#markup' => l(t('Add my UCInetID'), 'user/'. $account->uid .'/ucinetid/add',
          array('attributes' => array('title' => 'Add ability to login to this account using your UCInetID'))),
        '#weight' => 19,
      );
    }
  }
}

/**
 * validate user_edit ucinetid, campusid fields
 * these fields are validated for admin users
 *
 * @param $form
 * @param $form_state
 */
function ucinetid_user_form_validate($form, &$form_state) {

  // check that campusid is numeric and the right length; left-pad with '0' as needed
  if ($form_state['values']['campusid'] != '') {

    if (!preg_match('/^[0-9]+$/', $form_state['values']['campusid']))
      form_set_error('campusid', 'CampusID must be a number');
    elseif (drupal_strlen($form_state['values']['campusid']) > 12)
      form_set_error('campusid', 'CampusID must be a 12-digit number');
    elseif (drupal_strlen($form_state['values']['campusid']) < 12)
      form_set_value(array('#parents' => array('campusid')),
                str_pad($form_state['values']['campusid'], 12, '0', STR_PAD_LEFT), $form_state);
  }

  if ($form_state['values']['ucinetid'] != '') {

    // don't know what chars should be considerd valid in ucinetid, so no syntactic validation

    if (function_exists('ldap_connect')) { // ldap lookup validation
      module_load_include('inc', 'ucinetid');

      $result = ucinetid_ldap_search($form_state['values']['ucinetid']);
      // set campusid if it was blank and ldap search succeeded

      // FERPA-blocked students don't show up in directory; warn,
      // but allow adding accounts if UCInetID & campusID are both known
      if (empty($result))
        drupal_set_message(t('UCInetID %ucinetid not found in UCI directory',
                                                  array('%ucinetid' => $form_state['values']['ucinetid'])), 'warning');
      elseif (!isset($result['campusid']) || $result['campusid'] == '')
        form_set_error('campusid', t('CampusID not found in UCI directory for UCInetID %ucinetid',
                                                  array('%ucinetid' => $form_state['values']['ucinetid'])));
      elseif ($form_state['values']['campusid'] == '')
        form_set_value(array('#parents' => array('campusid')), $result['campusid'], $form_state);

      elseif ($result['campusid'] != $form_state['values']['campusid']) {
        form_set_error('campusid', 'CampusID does not correspond to UCInetID');
      }
    }

    // if ucinetid is set, so must be campusid

    if ($form_state['values']['campusid'] == '')
      form_set_error('campusid', 'CampusID may not be blank');
    else {

      // ucinetid and campusid set, see if authname already registered by someone else

      $account = $form['#user'];
      $a2 = ucinetid_get_authmap($form_state['values']);

      // TODO: should use theme('username')
      if (isset($a2['uid']) && $a2['uid'] != $account->uid)
        form_set_error('ucinetid', t('UCInetID %ucinetid is assigned to ',
          array('%ucinetid' => $form_state['values']['ucinetid'])) . l(t('another account'), 'user/'. $a2['uid']) .'.');
    }
  } // form_state[values][ucinetid] not blank
}

// TODO maybe this should be in hook_user_update()
// and pass in values[authname_ucinetid]
// for auto-account-creation ?

/**
 * hook_submit handler - process ucinetid, campusid changes
 */
function ucinetid_user_form_submit($form, &$form_state) {
  $account = $form['#user'];
  $authname = ucinetid_authname($form_state['values']); // construct from ucinetid, campusid values
  user_set_authmaps($account, array('authname_ucinetid' => $authname));
}

/**
 * Form generation function.
 *
 * Display a UCI UCInetID login form.  This form posts to the UCI WebAuth server.
 */
function ucinetid_login($form, &$form_state) {
  $action = variable_get('ucinetid_login_url', UCINETID_WEBAUTH_LOGIN);
  $return_url = url('user/login/ucinetid/return', array('absolute' => TRUE,
    'query' => (isset($_GET['destination']) ? drupal_get_destination() : NULL),
  ));

  $form['#action'] = $action;

  $form['#attached']['css'][] = drupal_get_path('module', 'ucinetid') . '/ucinetid.css';
  $form['#attached']['js'][] = drupal_get_path('module', 'openid') . '/openid.js';

  $form['referer'] = array(
    '#type' => 'hidden',
    '#value' => $action,
  );
  $form['return_url'] = array(
    '#type' => 'hidden',
    '#value' => $return_url,
  );
  $form['info_text'] = array(
    '#type' => 'hidden',
    '#value' => '',
  );
  $form['info_url'] = array(
    '#type' => 'hidden',
    '#value' => '',
  );
  $form['submit_type'] = array(
    '#type' => 'hidden',
    '#value' => '',
  );
  $form['ucinetid'] = array(
    '#type' => 'textfield',
    '#title' => t('Log in using UCInetID'),
    '#description' => t('Enter your UCInetID (e.g., ptanteater)'),
    '#size' => 30,
    '#maxlength' => 128,
    '#required' => TRUE,
  );

  $form['password'] = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#description' => t('Enter your UCInetID password'),
    '#size' => 30,
    '#maxlength' => 128,
    '#required' => TRUE,
  );

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' =>'submit',
    '#name' => 'login_button',
    '#value' => t('Log in'),
  );
  $form['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => l('Cancel', 'user/login'),
    '#prefix' => '<span id="ucinetid-user-login-cancel">', // for ucinetid.js
    '#suffix' => '</span>',
  );
  return $form;
}

/**
 * Reteive the authmap values for a user, by $account, array(uciniet,campusid) or authname string
 *
 * @param $account object or $values array or $authname string
 * @return array(
 *  'aid'      => id
 *  'uid'      => id
 *  'module'   => 'ucinetid'
 *  'authname' => string
 *  'ucinetid' => string
 *  'campusid' => string)
 */
function ucinetid_get_authmap($arg) {
  $response = array();
  $result = FALSE;

  // custom query since user_get_authmaps() only searches by authname string
  if (is_object($arg) && isset($arg->uid))// $account object
    $result = db_query("SELECT * FROM {authmap} WHERE module = :module AND uid = :uid", array(':module' => 'ucinetid', ':uid' => $arg->uid));
  else {
    if (is_array($arg)) {               // array(ucinetid => user,campusid=num)
      if (isset($arg['ucinetid']) && isset($arg['campusid']))
        $arg = ucinetid_authname($arg);
    }
    if (is_string($arg))                // authname string
      $result = db_query("SELECT * FROM {authmap} WHERE module = :module AND authname = :authname", array(':module' => 'ucinetid', ':authname' => $arg));
  }

  if ($result) {
    $response = $result->fetchAssoc(); // db_fetch_array($q);

    if ($response !== FALSE && isset($response['authname']) && $response['authname'] != '') {
      // decode authname string "username@login.uci.edu/campusidnumber"
      $a = explode('@', $response['authname']);
      if (sizeof($a) == 2) {
        $b = explode('/', $a[1]);
        if (sizeof($b) == 2) {
          $response['ucinetid'] = $a[0];
          $response['campusid'] = $b[1];
        }
      }
    }
  }
  return $response;
}

/**
 * encode array(ucinetid,campusid) into authname string username@login.uci.edu/campusidnumber
 *
 * @param $response array
 * @return authname string
 */
function ucinetid_authname($response) {
  if (isset($response)
        && isset($response['ucinetid']) && $response['ucinetid'] != ''
        && isset($response['campusid']) && $response['campusid'] != '' )
    return $response['ucinetid'] .'@login.uci.edu/'. $response['campusid'];
  else
    return FALSE;
}
